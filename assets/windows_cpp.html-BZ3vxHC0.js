import{_ as l,c as o,e as i,f as s,a,b as t,d,o as r,r as c}from"./app-BDRoJd17.js";const p={};function h(k,e){const n=c("DiscourseComments");return r(),o("div",null,[e[0]||(e[0]=i("div",{class:"hint-container tip"},[i("p",{class:"hint-container-title"},"VSCode C++项目 Windows环境 从零配置保姆指南")],-1)),e[1]||(e[1]=i("p",null,"本篇指南会带你从零开始，在完全干净的Windows环境中，配置一个足够上项目规模的，基于VS Code的，现代的C++开发环境。",-1)),e[2]||(e[2]=i("p",null,[s("如果有不明白的步骤，也可以参考本人录制的"),i("a",{href:"https://www.bilibili.com/video/BV13F4WeLEqR",target:"_blank",rel:"noopener noreferrer"},"B站视频"),s("，如果对你有帮助请不吝送上三连～")],-1)),a(' <iframe src="//player.bilibili.com/player.html?isOutside=true&aid=113124254420346&bvid=BV13F4WeLEqR&cid=25836912872&p=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"></iframe> '),e[3]||(e[3]=t('<p>配置预览：</p><ul><li>Visual Studio Code</li><li>Mingw-w64 (GCC)</li><li>XMake</li><li>Clangd</li></ul><h2 id="配置visual-studio-code" tabindex="-1"><a class="header-anchor" href="#配置visual-studio-code"><span>配置Visual Studio Code</span></a></h2><ol><li>完成安装：<a href="tools/vscode/install_vscode_on_windows">在Windows上安装 Visual Studio Code</a></li><li>（可选）新建一个Profile，避免插件污染，以及过多插件在同一个Profile造成的加载缓慢：<a href="tools/vscode/using_vscode#profile">Profile</a></li><li>安装 <code>C/C++ Extension Pack</code> 插件，参考：<a href="tools/vscode/vscode_cpp_common">VSCode 通用C++环境</a></li><li>其他插件的安装会在后续步骤中分别进行</li></ol><h2 id="安装mingw-w64" tabindex="-1"><a class="header-anchor" href="#安装mingw-w64"><span>安装Mingw-w64</span></a></h2><h3 id="msys2" tabindex="-1"><a class="header-anchor" href="#msys2"><span>MSYS2</span></a></h3><p>直接参考 <a href="https://code.visualstudio.com/docs/cpp/config-mingw" target="_blank" rel="noopener noreferrer">Get Started with C++ and MinGW-w64 in Visual Studio Code</a> 中的安装步骤。</p><p><strong>中文参考</strong>：<a href="https://vscode.github.net.cn/docs/cpp/config-mingw" target="_blank" rel="noopener noreferrer">Visual Studio Code 中的 C++ 和 MinGW-w64 入门 Vscode中文网</a></p><h3 id="w64devkit" tabindex="-1"><a class="header-anchor" href="#w64devkit"><span>w64devkit</span></a></h3><blockquote><ul><li><a href="environment/mingw">安装 - Mingw-w64</a></li></ul></blockquote><p><strong>安装步骤</strong>：</p><ul><li>下载 <code>w64devkit</code> 的二进制包</li><li>解压到你的目录下，例如 <code>C:\\w64devkit</code></li><li>将 <code>C:\\w64devkit\\bin</code> 添加到你的<a href="environment/environment_variable"><code>环境变量</code></a>中</li><li>打开命令行，输入 <code>gcc --version</code>，如果能看到版本信息，说明安装成功</li></ul><h2 id="配置xmake" tabindex="-1"><a class="header-anchor" href="#配置xmake"><span>配置XMake</span></a></h2><blockquote><ul><li><a href="https://xmake.io/#/zh-cn/guide/installation?id=windows" target="_blank" rel="noopener noreferrer">Windows安装指南 - xmake</a></li></ul></blockquote><p>这里建议使用安装包安装，避免遇到Powershell的权限问题。</p><p>完成xmake的安装后，在VSCode中安装xmake插件：</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">code</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --install-extension</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> xmake-vscode.xmake</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><figure><img src="https://raw.githubusercontent.com/xmake-io/xmake-vscode/master/res/problem.gif" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><blockquote><p>▲ xmake 插件使用预览 <br> Reference: <a href="https://xmake.io/#/zh-cn/plugin/more_plugins?id=vscode-%e6%8f%92%e4%bb%b6" target="_blank" rel="noopener noreferrer">VSCode插件 - xmake</a></p></blockquote><h2 id="optional-配置intellsense" tabindex="-1"><a class="header-anchor" href="#optional-配置intellsense"><span>(Optional) 配置Intellsense</span></a></h2><p>有时候xmake-vscode并不能很好的配置Intellsence，这时候如果仍然希望使用 <code>cpp-tools</code> 提供的内联提示，我们需要手动配置其配置文件，参考：<a href="https://guide.samuka007.xyz/articles/vscode_cpp_common/#%E9%85%8D%E7%BD%AE-intellsence" target="_blank" rel="noopener noreferrer">配置Intellsence</a></p>',21)),a(" use absolute route duel to incomplete chinese support "),e[4]||(e[4]=t(`<h2 id="使用-测试配置" tabindex="-1"><a class="header-anchor" href="#使用-测试配置"><span>使用/测试配置</span></a></h2><p>命令行在你的指定目录下，使用xmake创建一个新项目，并使用VS Code打开该项目：</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> xmake</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> create</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -l</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> c++</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -t</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> console</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> test</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># create test ...</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">#   [+]: xmake.lua</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">#   [+]: src/main.cpp</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">#   [+]: .gitignore</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># create ok!</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> code</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> test</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在VS Code下，理论上你应该能看到类似下图的提示： <img src="https://xmake.io/assets/img/guide/vscode_status_bar.png" alt="" loading="lazy"></p><p>并且，打开 <code>src/main.cpp</code> 文件，应该不会有任何错误提示，有现成的代码模板，可以直接编译运行。按下 <code>Ctrl</code> 并将光标移到标识符上，你应该能看到内联提示正常的起了作用。</p><p>由于我们使用的是 <code>MinGW</code> 的工具链，我们需要点击工具栏中的 <code>windows</code>，选择 <code>mingw</code>；点击 <code>tooltrain</code>，选择 <code>gcc</code>，随后点击 <code>Build</code> 开始构建。如果一切正常，你会看到以下提示：</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[ 50%]: cache compiling.debug src/main.cpp</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[ 75%]: linking.debug test</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[100%]: build ok, spent 1.731s</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后点击 <code>default</code> 旁的小三角，你就可以运行该程序了！</p><h2 id="配置clangd" tabindex="-1"><a class="header-anchor" href="#配置clangd"><span>配置Clangd</span></a></h2><p>TODO</p>`,10)),d(n)])}const g=l(p,[["render",h],["__file","windows_cpp.html.vue"]]),u=JSON.parse('{"path":"/guide/windows_cpp.html","title":"C++ on Windows","lang":"zh-CN","frontmatter":{"title":"C++ on Windows","icon":"vscode-icons:file-type-cpp3","date":"2024-09-13T06:04:21.000Z","author":{"name":"Samuka007","url":"https://github.com/Samuka007"},"categories":["Advance"],"tags":["VSCode","C++","Windows"],"summary":"本篇指南会带你从零开始，在完全干净的Windows环境中，配置一种足够上项目规模的，基于VSCode的，现代的C++开发环境。","description":"VSCode C++项目 Windows环境 从零配置保姆指南 本篇指南会带你从零开始，在完全干净的Windows环境中，配置一个足够上项目规模的，基于VS Code的，现代的C++开发环境。 如果有不明白的步骤，也可以参考本人录制的B站视频，如果对你有帮助请不吝送上三连～ 配置预览： Visual Studio Code Mingw-w64 (GCC...","head":[["meta",{"property":"og:url","content":"https://guide.scutosc.cn/guide/windows_cpp.html"}],["meta",{"property":"og:site_name","content":"OSC Guide"}],["meta",{"property":"og:title","content":"C++ on Windows"}],["meta",{"property":"og:description","content":"VSCode C++项目 Windows环境 从零配置保姆指南 本篇指南会带你从零开始，在完全干净的Windows环境中，配置一个足够上项目规模的，基于VS Code的，现代的C++开发环境。 如果有不明白的步骤，也可以参考本人录制的B站视频，如果对你有帮助请不吝送上三连～ 配置预览： Visual Studio Code Mingw-w64 (GCC..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://raw.githubusercontent.com/xmake-io/xmake-vscode/master/res/problem.gif"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-09-26T07:05:06.000Z"}],["meta",{"property":"article:author","content":"Samuka007"}],["meta",{"property":"article:tag","content":"VSCode"}],["meta",{"property":"article:tag","content":"C++"}],["meta",{"property":"article:tag","content":"Windows"}],["meta",{"property":"article:published_time","content":"2024-09-13T06:04:21.000Z"}],["meta",{"property":"article:modified_time","content":"2024-09-26T07:05:06.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"C++ on Windows\\",\\"image\\":[\\"https://raw.githubusercontent.com/xmake-io/xmake-vscode/master/res/problem.gif\\",\\"https://xmake.io/assets/img/guide/vscode_status_bar.png\\"],\\"datePublished\\":\\"2024-09-13T06:04:21.000Z\\",\\"dateModified\\":\\"2024-09-26T07:05:06.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Samuka007\\",\\"url\\":\\"https://github.com/Samuka007\\"}]}"]]},"headers":[{"level":2,"title":"配置Visual Studio Code","slug":"配置visual-studio-code","link":"#配置visual-studio-code","children":[]},{"level":2,"title":"安装Mingw-w64","slug":"安装mingw-w64","link":"#安装mingw-w64","children":[{"level":3,"title":"MSYS2","slug":"msys2","link":"#msys2","children":[]},{"level":3,"title":"w64devkit","slug":"w64devkit","link":"#w64devkit","children":[]}]},{"level":2,"title":"配置XMake","slug":"配置xmake","link":"#配置xmake","children":[]},{"level":2,"title":"(Optional) 配置Intellsense","slug":"optional-配置intellsense","link":"#optional-配置intellsense","children":[]},{"level":2,"title":"使用/测试配置","slug":"使用-测试配置","link":"#使用-测试配置","children":[]},{"level":2,"title":"配置Clangd","slug":"配置clangd","link":"#配置clangd","children":[]}],"git":{"createdTime":1726670714000,"updatedTime":1727334306000,"contributors":[{"name":"Samuka007","email":"samuka007@qq.com","commits":6},{"name":"Samuka007","email":"samuka007@dragonos.org","commits":2}]},"readingTime":{"minutes":2.74,"words":823},"filePathRelative":"guide/windows_cpp.md","localizedDate":"2024年9月13日","autoDesc":true}');export{g as comp,u as data};
